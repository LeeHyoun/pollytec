<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.library.mybatis.Rent"> <!-- mapper 설정마다 다른 값을 가져야 한다. -->
	<!-- mybatis-config.xml 에 설정되어있는 typeAlias : User (alias)를 사용 -->

<!-- private int rentNo;
	private int bookNo;
	private String usrName;
	private String usrMobile;
	private String bookTitle;
	private String rentDay;
	private String dueRecord;
	private String dueReturnDay;
	private String rentState;
	private String dueState;
	private int dueOverDue;
	private String rentBooking; -->
	
	<resultMap type="Rent" id="RentResultMap"> 	
		<result column="RENT_NO" property="rentNo"/>
		<result column="book_title" property="bookTitle"/>
		<result column="book_no" property="bookNo"/>
		<result column="rent_day" property="rentDay"/>
		<result column="rent_dueday" property="rentDueday"/>
		<result column="rent_state" property="rentState"/>
		<result column="usr_id" property="usrId"/>
		<result column="usr_name" property="usrName"/>
		<result column="USR_MOBILE" property="usrMobile"/>
		<result column="RENT_BOOKING" property="rentBooking"/>
		<result column="RENT_FLAG" property="rentFlag"/>
		<result column="R" property="rowNum"/>
	</resultMap>
	
	<select id="rentList" parameterType="BookPageDTO" resultMap="RentResultMap" >
		<![CDATA[
			select RV.R R, RV.rent_no RENT_NO, RV.book_title book_title, RV.book_no book_no, 
			to_char(RV.rent_day,'yyyy.MM.dd') rent_day, to_char(RV.rent_dueday,'yyyy.MM.dd') rent_dueday, RV.rent_state rent_state, RV.usr_id usr_id, 
			RV.usr_name usr_name, RV.USR_MOBILE USR_MOBILE, RV.RENT_BOOKING RENT_BOOKING, RV.RENT_FLAG RENT_FLAG from 
			(select ROWNUM R, rent_no, book_title, book_no, rent_day, rent_dueday, rent_state, usr_id, usr_name, USR_MOBILE, RENT_BOOKING, RENT_FLAG from rent_view 
		]]>	
		<where>
			 <if test="searchFiled != null and searchFiled != ''">
	              ${searchFiled} LIKE '%' || #{searchValue} || '%'  
	         </if>
        </where>
			) RV where RV.R BETWEEN #{start} AND #{end} 
	</select>
	
	<select id="RselectCount" resultType="java.lang.Integer">
		SELECT count(*) FROM rent_table
	</select>
	
	<select id="getRent" parameterType="java.lang.Integer" resultMap="RentResultMap">
	<![CDATA[
		select * from rent_table where rent_no = #{value}
	]]>
	</select>
	<update id="updateRent" parameterType="Rent">
	<![CDATA[
		update rent_table set rent_state = #{rentState}, rent_booking = #{rentBooking}, rent_flag = #{rentFlag} where book_no = #{bookNo}
	]]>
	</update>
	
	<insert id="rentInsert" parameterType="Rent">
		insert into rent_table (RENT_NO,USR_ID,BOOK_NO,RENT_DAY,RENT_DUEDAY,RENT_STATE,RENT_BOOKING,RENT_FLAG,RENT_BOOKINGID)
		values (rent_seq.NEXTVAL,#{usrId},#{bookNo},sysdate,sysdate,'대여중','예약가능','0','없음')
	</insert>
		
 </mapper>
 

 